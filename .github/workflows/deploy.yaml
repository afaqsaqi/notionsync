name: Deploy MultiDocker
on:
  push:
    branches:
      - main 
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - run: docker build -t aafu6296/api-test -f ./server/Dockerfile.dev .
      - run: docker run -e CI=true aafu6296/api-test npm run test:e2e
 
      - run: docker build -t aafu6296/notion-api -f ./server/Dockerfile .
      - run: docker build -t aafu6296/nginx ./nginx

      - run: docker push aafu6296/notion-api
      - run: docker push aafu6296/nginx

      - name: Create .ebextensions/01-docker-auth.config
        run: |
          mkdir -p .ebextensions
          echo "files:" > .ebextensions/01-docker-auth.config

          # Prepare base64-encoded Docker credentials
          AUTH_STRING=$(echo -n "${{ secrets.DOCKER_USERNAME }}:${{ secrets.DOCKER_PASSWORD }}" | base64)

          # Write Docker config.json using encoded auth string
          echo "  \"/root/.docker/config.json\":" >> .ebextensions/01-docker-auth.config
          echo "    mode: '000600'" >> .ebextensions/01-docker-auth.config
          echo "    owner: root" >> .ebextensions/01-docker-auth.config
          echo "    group: root" >> .ebextensions/01-docker-auth.config
          echo "    content: |" >> .ebextensions/01-docker-auth.config
          echo "      {" >> .ebextensions/01-docker-auth.config
          echo "        \"auths\": {" >> .ebextensions/01-docker-auth.config
          echo "          \"https://index.docker.io/v1/\": {" >> .ebextensions/01-docker-auth.config
          echo "            \"auth\": \"${AUTH_STRING}\"" >> .ebextensions/01-docker-auth.config
          echo "          }" >> .ebextensions/01-docker-auth.config
          echo "        }" >> .ebextensions/01-docker-auth.config
          echo "      }" >> .ebextensions/01-docker-auth.config


      - name: Create .ebextensions/certs.config
        run: |
          mkdir -p .ebextensions
          echo "files:" > .ebextensions/certs.config

          # server.crt
          echo "  /etc/pki/tls/certs/fullchain.pem:" >> .ebextensions/certs.config
          echo "    mode: '000400'" >> .ebextensions/certs.config
          echo "    owner: root" >> .ebextensions/certs.config
          echo "    group: root" >> .ebextensions/certs.config
          echo "    content: |" >> .ebextensions/certs.config
          echo "${{ secrets.SERVER_CRT }}" | sed 's/^/      /' >> .ebextensions/certs.config

          # server.key
          echo "  /etc/pki/tls/certs/server.key:" >> .ebextensions/certs.config
          echo "    mode: '000400'" >> .ebextensions/certs.config
          echo "    owner: root" >> .ebextensions/certs.config
          echo "    group: root" >> .ebextensions/certs.config
          echo "    content: |" >> .ebextensions/certs.config
          echo "${{ secrets.SERVER_KEY }}" | sed 's/^/      /' >> .ebextensions/certs.config
 
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*' 
 
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: Notion
          environment_name: Notion-env-2
          existing_bucket_name: elasticbeanstalk-ap-south-1-203918860171
          region: ap-south-1
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip